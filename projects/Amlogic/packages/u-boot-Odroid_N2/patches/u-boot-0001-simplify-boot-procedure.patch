diff --git a/include/configs/odroid-g12-common.h b/include/configs/odroid-g12-common.h
index 7ecf0af..1b9764a 100644
--- a/include/configs/odroid-g12-common.h
+++ b/include/configs/odroid-g12-common.h
@@ -101,138 +101,21 @@
 			"cfgload; "			\
 		"done\0"
 
-#define ENV_MMC_BOOT_DISTRO				\
-	"boot_mmc_distro="				\
-		"setenv devtype mmc; "			\
-		"for n in ${mmc_list}; do "		\
-			"setenv devnum ${n}; "		\
-			"setenv devno ${n}; "		\
-			"load mmc ${n} ${preloadaddr} boot.scr; "	\
-			"source ${preloadaddr}; "		\
-		"done\0"				\
-
 /* args/envs */
 #define CONFIG_SYS_MAXARGS  64
 #define CONFIG_EXTRA_ENV_SETTINGS \
         ENV_PXE_DEFAULT \
         ENV_MMC_DEFAULT \
-        ENV_MMC_BOOT_DISTRO \
         ENV_MMC_LIST_DEFAULT \
-	"console=" CONFIG_DEFAULT_CONSOLE \
         "loadaddr=1080000\0"\
-        "outputmode=1080p60hz\0" \
-        "hdmimode=1080p60hz\0" \
-        "cvbsmode=576cvbs\0" \
-        "display_width=1920\0" \
-        "display_height=1080\0" \
-        "display_bpp=24\0" \
-        "display_color_index=24\0" \
-        "display_layer=osd0\0" \
-        "display_color_fg=0xffff\0" \
-        "display_color_bg=0\0" \
         "dtb_mem_addr=0x1000000\0" \
-        "fb_addr=0x3d800000\0" \
-        "fb_width=1920\0" \
-        "fb_height=1080\0" \
         "fdt_high=0x20000000\0"\
-        "EnableSelinux=permissive\0" \
-        "fdt_addr_r=0x1000000\0" \
-        "kernel_addr_r=0x1080000\0" \
-        "ramdisk_addr_r=0x3080000\0" \
-        "preloadaddr=0x3000000\0"\
-        "cvbs_drv=0\0"\
-        "osd_reverse=0\0"\
-        "video_reverse=0\0"\
-        "boot_part=boot\0"\
-        "initargs="\
-            "rootfstype=ramfs init=/init console=ttyS0,115200n8 no_console_suspend earlyprintk=aml-uart,0xff803000 ramoops.pstore_en=1 ramoops.record_size=0x8000 ramoops.console_size=0x4000 "\
-            "\0"\
-        "switch_bootmode=" \
-            "get_rebootmode;" \
-            "if test ${reboot_mode} = factory_reset; then " \
-                "run boot_recovery;" \
-            "else if test ${reboot_mode} = selfinstall; then " \
-                "oem fdisk;" \
-                "run boot_recovery;" \
-            "else if test ${reboot_mode} = cold_boot; then " \
-                /*"run try_auto_burn; "*/ \
-            "else if test ${reboot_mode} = fastboot; then " \
-                "fastboot;" \
-            "fi;fi;fi;fi;" \
-            "\0" \
-        "boot_recovery="\
-            "run boot_mmc; " \
-            "setenv bootargs ${initargs} logo=${display_layer},loaded,${fb_addr} " \
-            "vout=${outputmode},enable cvbsmode=${cvbsmode} " \
-            "hdmimode=${hdmimode} osd_reverse=${osd_reverse} video_reverse=${video_reverse} " \
-            "androidboot.selinux=${EnableSelinux} jtag=disable " \
-            "androidboot.hardware=" CONFIG_DEVICE_PRODUCT " " \
-            "recovery_part=recovery recovery_offset=0;" \
-            "for n in ${mmc_list}; do "\
-                "mmc dev ${n}; " \
-                "movi read recovery 0 ${loadaddr}; " \
-                "movi read dtbs 0 ${dtb_mem_addr}; " \
-                "booti ${loadaddr} - ${dtb_mem_addr}; " \
-                "bootm;" \
-            "done\0" \
-        "boot_rawimage=setenv bootargs ${initargs} logo=${display_layer},loaded,${fb_addr} " \
-            "vout=${outputmode},enable cvbsmode=${cvbsmode} " \
-            "hdmimode=${hdmimode} osd_reverse=${osd_reverse} video_reverse=${video_reverse} " \
-            "androidboot.selinux=${EnableSelinux} androidboot.firstboot=${firstboot} jtag=disable " \
-            "androidboot.hardware=" CONFIG_DEVICE_PRODUCT "; " \
-            "for n in ${mmc_list}; do " \
-                "mmc dev ${n}; " \
-	        "movi read boot 0 ${loadaddr}; " \
-	        "movi read dtbs 0 ${dtb_mem_addr}; " \
-	        "booti ${loadaddr} - ${dtb_mem_addr}; " \
-	        "bootm; " \
-            "done\0" \
 	"boot_default="\
             "run boot_mmc; " \
-            "run boot_mmc_distro; " \
-            "run boot_rawimage\0" \
-        "init_display="\
-            "osd open; osd clear; " \
-            "for n in ${mmc_list}; do " \
-                "if load mmc ${n} ${preloadaddr} logo.bmp.gz; then " \
-                    "setenv logo_addr_r ${loadaddr}; " \
-                    "unzip ${preloadaddr} ${logo_addr_r}; " \
-                    "bmp display ${logo_addr_r}; " \
-                    "bmp scale; " \
-                "elif load mmc ${n} ${preloadaddr} logo.bmp; then " \
-                    "setenv logo_addr_r ${preloadaddr}; " \
-                    "bmp display ${logo_addr_r}; " \
-                    "bmp scale; " \
-                "fi; " \
-            "done; " \
-            "vout output ${outputmode};\0" \
-	"set_spi_params="\
-		"setenv start_uboot 0x0; setenv start_kernel 0x119000; setenv start_dtb 0x100000; setenv start_initrd 0x4E6C00; "\
-		"setenv size_kernel 0x3CDC00; setenv size_dtb 0x19000; setenv size_initrd 0x319400;\0"\
-	"fusing_spi_from_sd="\
-		"run set_spi_params; "\
-		"sf probe; "\
-		"sf erase 0x0 0x800000; "\
-		"load mmc 0 ${loadaddr} u-boot.bin; sf write ${loadaddr} ${start_uboot} ${filesize}; "\
-		"load mmc 0 ${loadaddr} Image.gz; sf write ${loadaddr} ${start_kernel} ${filesize}; "\
-		"load mmc 0 ${loadaddr} s922d_odroidn2.dtb; sf write ${loadaddr} ${start_dtb} ${filesize}; "\
-		"load mmc 0 ${loadaddr} uInitrd.igz; sf write ${loadaddr} ${start_initrd} ${filesize}\0"\
-	"booting_from_spi="\
-		"setenv bootargs ${initargs} console=tty0 logo=osd0,loaded,0x3d800000 osd_reverse=0 video_reverse=0; "\
-		"hdmitx edid; "\
-		"setenv bootargs ${bootargs} vout=${vout} hdmimode=${hdmimode} modeline=${modeline} voutmode=${voutmode}; "\
-		"run set_spi_params; "\
-		"sf probe; "\
-		"sf read ${preloadaddr} ${start_kernel} ${size_kernel}; "\
-		"sf read ${dtb_mem_addr} ${start_dtb} ${size_dtb}; "\
-		"sf read ${initrd_high} ${start_initrd} ${size_initrd}; "\
-		"bootm ${preloadaddr} ${initrd_high} ${dtb_mem_addr};\0"\
-
-#define CONFIG_PREBOOT  \
-            "run init_display; " \
-            "run switch_bootmode;"
-
-#define CONFIG_BOOTCOMMAND			"run boot_default"
+
+#define CONFIG_PREBOOT
+
+#define CONFIG_BOOTCOMMAND
 
 #define CONFIG_BOOTAREA_SIZE			(1 * SZ_1M)
 #define CONFIG_MBR_SIZE				512
